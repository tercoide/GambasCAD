' Gambas module file

'' Returns the value in pixels of a text string, regarding the typography

Public Function TextWidth(str As String, sFont As String, zSize As Integer) As Integer

    Dim fnt As New Font

    fnt.Name = sFont
    fnt.Size = zSize

    Return fnt.TextWidth(str)

End

Public Sub Update(obj As Object, Optional aThemes As String[])

    Dim ch As Object
    Dim myclass As Class

    myclass = Object.Class(obj)

    If myclass.Symbols.Exist("Arrangement") Then
        For Each ch In obj.Children
            If Object.Type(ch) = "ToolButton" Then
                If ch.Tag Then
                    If aThemes Then
                        ch.Picture = TagPic(ch.Tag, ch.W - 7,, IIf(aThemes.Count > 0, aThemes, []))
                    Else
                        ch.Picture = TagPic(ch.Tag, ch.W - 7)
                    Endif
                Endif
            Else
                If aThemes Then
                    Update(ch, IIf(aThemes.Count > 0, aThemes, []))
                Else
                    Update(ch)
                Endif

            Endif
        Next
    Endif

End

Public Function TagPic(sTag As String, iSize As Integer, Optional iFill As Integer, Optional aThemes As String[]) As Picture

    Dim sVector As String
    Dim pic As Picture
    Dim sPic As String

    sPic = "./svg/Gray/" & sTag & ".svg"

    If Exist(sPic) Then
        sVector = SvgColorFix(sPic)
        pic = Image.FromString(sVector).Stretch(iSize, iSize).Picture
    Else
        pic = Stock["16/error"]
    Endif

    Return pic

End

'' Replace a color in an svg file with one that contrasts with the background of the desktop theme
Public Function Contrary(sFile As String, sColor As String, iBackground As Integer, Optional iAltern As Integer) As String

    Dim sVector As String
    Dim iContrast As Integer
    Dim sReplace As String
    Dim sAltern As String

    sAltern = "#" & CStr(Hex(iAltern, 6))

    If iBackground = -1 Then
        If Application.DarkTheme Then
            If iAltern > 0 Then
                sAltern = sAltern
            Else
                sReplace = "#eeeeee"
            Endif
            sVector = Replace(File.Load(sFile), sColor, sReplace)
        Else
            If iAltern > 0 Then
                sAltern = sAltern
            Else
                sReplace = "#000000"
            Endif
            sVector = Replace(File.Load(sFile), sColor, sReplace)
        Endif
    Else
        iContrast = Color.Invert(iBackground)
        sReplace = "#" & CStr(Hex(iContrast, 6))
        sVector = Replace(File.Load(sFile), sColor, sReplace)
    Endif

    Return sVector

End

'' Reemplaza el color del trazo de SVG por el del ButtonForeground y el relleno por LigthForeground
'' Opcionalmente usa el color provisto
Public Function SvgColorFix(sFile As String, Optional iColor As Integer = -1) As String

    Dim sVector, sSvg As String
    Dim iContrast As Integer
    Dim sReplace As String
    Dim sAlternForeground As String
    Dim sAlternLigthForeground As String
    Dim p As Integer
    Dim ButtonForeground, LightForeground As Integer

    If iColor = -1 Then
        ButtonForeground = Color.ButtonForeground
        lightForeground = Color.LightForeground
    Else
        ButtonForeground = iColor
        lightForeground = Color.Lighter(iColor)
    Endif

    'fill="none" stroke="#0066b3"
    sAlternForeground = "stroke=\"#" & CStr(Hex(ButtonForeground, 6))
    sAlternLigthForeground = "fill=\"#" & CStr(Hex(lightForeground, 6))

    sSvg = File.Load(sFile)

    Do
        p = InStr(sSvg, "stroke=\"#", p + 1)
        If p > 0 Then
            sSvg = Mid(ssvg, 1, p - 1) & sAlternForeground & Mid(ssvg, p + 15)
        Endif
    Loop Until p = 0
    Do
        p = InStr(sSvg, "fill=\"#", p + 1)
        If p > 0 Then
            sSvg = Mid(ssvg, 1, p - 1) & sAlternLigthForeground & Mid(ssvg, p + 13)
        Endif
    Loop Until p = 0

    ' Algunas Apps crean los SVG distinto
    ' fill:#0066b3;stroke:#0066b3
    sAlternForeground = "stroke:#" & CStr(Hex(ButtonForeground, 6))
    sAlternLigthForeground = "fill:#" & CStr(Hex(LightForeground, 6))
    Do
        p = InStr(sSvg, "stroke:#", p + 1)
        If p > 0 Then
            sSvg = Mid(ssvg, 1, p - 1) & sAlternForeground & Mid(ssvg, p + 14)
        Endif
    Loop Until p = 0
    Do
        p = InStr(sSvg, "fill:#", p + 1)
        If p > 0 Then
            sSvg = Mid(ssvg, 1, p - 1) & sAlternLigthForeground & Mid(ssvg, p + 12)
        Endif
    Loop Until p = 0
    Return ssvg

End
