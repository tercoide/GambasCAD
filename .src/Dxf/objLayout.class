' Gambas class file

' 0 (LAYOUT)
'
' 5 Handle
'
' 102 Start of persistent reactors group; always “{ACAD_REACTORS”
'
' 330 Soft-pointer ID/handle to owner dictionary
'
' 102 End of persistent reactors group, always “}”
'
' 330 Soft-pointer ID/handle to owner object
'
' 100 Subclass marker (AcDbPlotSettings)
'
' plotsettings object group codes
'
' For group codes and descriptions following the AcDbPlotSettings marker, see PLOTSETTINGS
'
' 100 Subclass marker (AcDbLayout)
'
' 1 Layout name
'
' 70 Flag (bit-coded) to control the following: 1 = Indicates the PSLTSCALE value for this layout when this layout is current 2 = Indicates the LIMCHECK value for this layout when this layout is current
'
' 71 Tab order. This number is an ordinal indicating this layout's ordering in the tab control that is attached to the AutoCAD drawing frame window. Note that the “Model” tab always appears as the first tab regardless of its tab order
'
' 10/20 Minimum limits for this layout (defined by LIMMIN while this layout is current)
'
' 11/21 Maximum limits for this layout (defined by LIMMAX while this layout is current):
'
' 12/22/32 Insertion base point for this layout (defined by INSBASE while this layout is current):
'
' 14/24/34 Minimum extents for this layout (defined by EXTMIN while this layout is current):
'
' 15/25/35 Maximum extents for this layout (defined by EXTMAX while this layout is current):
'
' 146 Elevation
'
' 13/23/33 UCS origin
'
' 16/26/36 UCS X-axis
'
' 17/27/37 UCS Y axis
'
' 76 Orthographic type of UCS 0 = UCS is not orthographic 1 = Top; 2 = Bottom  3 = Front; 4 = Back 5 = Left; 6 = Right
'
' 330 ID/handle to this layout's associated paper space block table record
'
' 331 ID/handle to the viewport that was last active in this layout when the layout was current
'
' 345 ID/handle of AcDbUCSTableRecord if UCS is a named UCS. If not present, then UCS is unnamed
'
' 346 ID/handle of AcDbUCSTableRecord of base UCS if UCS is orthographic (76 code is non-zero). If not present and 76 code is non-zero, then base UCS is taken to be WORLD
'
' 333 Shade plot ID

Create Static

Public Function ImportDXF(s As Sheet, cData As Collection) As Boolean

    Dim i As Integer, p As PrintStyle, r As String

    p = s.pPrintStyle

    s.id = dxf.ReadCodeFromCol(cData, 5)                ' handle

    r = dxf.ReadCodeFromCol(cData, 100, True)                     ' Inicio de PlotSettings
    If r <> "AcDbPlotSettings" Then
        gcd.debugInfo("Bad LAYOUT data",,, True)
        Return Null
    End If

    p.name = dxf.ReadCodeFromCol(cData, 1, True)                             ' name
    p.PrinterName = dxf.ReadCodeFromCol(cData, 2, True)                      ' Printer name
    p.PaperName = dxf.ReadCodeFromCol(cData, 4, True)                      ' hoja
    p.ViewName = dxf.ReadCodeFromCol(cData, 6, True)                      ' nombre que se ve View

    p.MarginLeft = dxf.ReadCodeFromCol(cData, 40, True)                   ' margenes
    p.MarginBottom = dxf.ReadCodeFromCol(cData, 41, True)
    p.MarginRigth = dxf.ReadCodeFromCol(cData, 42, True)
    p.MarginTop = dxf.ReadCodeFromCol(cData, 43, True)

    p.PaperSizeW = dxf.ReadCodeFromCol(cData, 44, True)                     ' tamaño del papel
    p.PaperSizeH = dxf.ReadCodeFromCol(cData, 45, True)

    p.PrintOffsetX = dxf.ReadCodeFromCol(cData, 46, True)                   ' offset
    p.PrintOffsetY = dxf.ReadCodeFromCol(cData, 47, True)

    p.PrintAreaX0 = dxf.ReadCodeFromCol(cData, 48, True)
    p.PrintAreaY0 = dxf.ReadCodeFromCol(cData, 49, True)
    p.PrintAreaX1 = dxf.ReadCodeFromCol(cData, 140, True)
    p.PrintAreaY1 = dxf.ReadCodeFromCol(cData, 141, True)

    p.ScaleDrawingUnit = dxf.ReadCodeFromCol(cData, 142, True)              ' escala
    p.ScalePaper = dxf.ReadCodeFromCol(cData, 143, True)

    r = dxf.ReadCodeFromCol(cData, 70, True)                               ' flags
    r = dxf.ReadCodeFromCol(cData, 72, True)                               ' unidad, que ignoro porque uso mm
    r = dxf.ReadCodeFromCol(cData, 73, True)                               ' rotacion
    p.PrintArea = dxf.ReadCodeFromCol(cData, 74, True)                     ' area de impresion
    r = dxf.ReadCodeFromCol(cData, 7, True)                                ' Style Sheet
    r = dxf.ReadCodeFromCol(cData, 75, True)                               ' scale type , es la escala en texto
    r = dxf.ReadCodeFromCol(cData, 76, True)                               ' shade plot mode
    r = dxf.ReadCodeFromCol(cData, 77, True)                               ' shade plot resolution
    r = dxf.ReadCodeFromCol(cData, 78, True)                               ' dpi
    r = dxf.ReadCodeFromCol(cData, 147, True)                              ' realunits/paper, es la escala en un float
    r = dxf.ReadCodeFromCol(cData, 148, True)                              ' paper image x
    r = dxf.ReadCodeFromCol(cData, 149, True)                              ' paper image x

    ' busco el marcador
    i = dxf.GoToCodeFromCol(cData, 100, "AcDbLayout")

    If i = 0 Then
        gcd.debugInfo("Bad LAYOUT data",, True, True)
        Return Null
    End If
    s.Name = dxf.ReadCodeFromCol(cData, 1, True)                           ' name

    r = dxf.ReadCodeFromCol(cData, 70, True)                               ' flags
    s.TabOrder = dxf.ReadCodeFromCol(cData, 71, True)                      ' orden de la tabulacion

    Return True

    ' catch

    Return False

End

Public Function ExportDXF(drw As Drawing) As Boolean

    Dim i As Integer, p As PrintStyle, r As String
    Dim s As Sheet

    For Each s In drw.Sheets

        p = s.pPrintStyle

        dxf.SaveCode(0, "LAYOUT")

        dxf.SaveCode(5, s.id)
        dxf.SaveCode(330, drw.Dictionary.Definitions["ACAD_LAYOUT"].id)
        dxf.SaveCode(100, "AcDbPlotSettings")
        dxf.SaveCode(1, p.name)                             ' name
        dxf.SaveCode(2, p.PrinterName)                      ' Printer name
        dxf.SaveCode(4, p.PaperName)                      ' hoja

        dxf.SaveCode(40, p.MarginLeft)                   ' margenes
        dxf.SaveCode(41, p.MarginBottom)
        dxf.SaveCode(42, p.MarginRigth)
        dxf.SaveCode(43, p.MarginTop)

        dxf.SaveCode(44, p.PaperSizeW)                     ' tamaño del papel
        dxf.SaveCode(45, p.PaperSizeH)

        dxf.SaveCode(46, p.PrintOffsetX)                   ' offset
        dxf.SaveCode(47, p.PrintOffsetY)

        dxf.SaveCode(48, p.PrintAreaX0)
        dxf.SaveCode(49, p.PrintAreaY0)
        dxf.SaveCode(140, p.PrintAreaX1)
        dxf.SaveCode(141, p.PrintAreaY1)

        dxf.SaveCode(142, p.ScaleDrawingUnit)              ' escala
        dxf.SaveCode(143, p.ScalePaper)

        dxf.SaveCode(70, r)                               ' flags
        dxf.SaveCode(72, r)                               ' unidad, que ignoro porque uso mm
        dxf.SaveCode(73, r)                               ' rotacion
        dxf.SaveCode(74, p.PrintArea)                     ' area de impresion
        dxf.SaveCode(7, r)                                ' Style Sheet
        dxf.SaveCode(75, r)                               ' scale type , es la escala en texto
        dxf.SaveCode(76, r)                               ' shade plot mode
        dxf.SaveCode(77, r)                               ' shade plot resolution
        dxf.SaveCode(78, r)                               ' dpi
        dxf.SaveCode(147, r)                              ' realunits/paper, es la escala en un float
        dxf.SaveCode(148, r)                              ' paper image x
        dxf.SaveCode(149, r)                              ' paper image x

        dxf.SaveCode(100, "AcDbLayout")
        dxf.SaveCode(1, s.Name)                           ' name

        dxf.SaveCode(70, r)                               ' flags
        dxf.SaveCode(71, s.TabOrder)                      ' orden de la tabulacion

    Next
    Return True

    ' catch

    Return False

End
