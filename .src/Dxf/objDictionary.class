' Gambas class file

' 0 DICTIONARY
' 5 Handle
' 330 Soft-pointer ID/handle to owner object
' 100 AcDbDictionary
' 280 Hard-owner flag. If set to 1, indicates that elements of the dictionary are to be treated as hard-owned
' 281 Duplicate record cloning flag (determines how to merge duplicate entries):
' 0 = Not applicable 1 = Keep existing 2 = Use clone 3 = <xref>$0$<name> 4 = $0$<name>  5 = Unmangle name
' 3  Entry name (one for each entry) (optional) por ejemplo LAYOUT
' 350 Soft-owner ID/handle to entry object (one for each entry) (optional)
' AutoCAD® maintains items such as mline styles and group definitions as objects in dictionaries. The following sections describe the AutoCAD object group codes maintained in dictionaries; however, other applications are free to create and use their own dictionaries as they see fit. The prefix "ACAD_" is reserved for use by AutoCAD applications.

Create Static

Public Function ImportDXF(s As Sheet, cData As Collection) As Boolean

    Dim i As Integer, p As PrintStyle, r As String

    p = s.pPrintStyle

    s.id = dxf.ReadCodeFromCol(cData, 5)                ' handle

    r = dxf.ReadCodeFromCol(cData, 100, True)                     ' Inicio de PlotSettings
    If r <> "AcDbPlotSettings" Then
        gcd.debugInfo("Bad LAYOUT data",,, True)
        Return Null
    End If

    p.name = dxf.ReadCodeFromCol(cData, 1, True)                             ' name
    p.PrinterName = dxf.ReadCodeFromCol(cData, 2, True)                      ' Printer name
    p.PaperName = dxf.ReadCodeFromCol(cData, 4, True)                      ' hoja

    p.MarginLeft = dxf.ReadCodeFromCol(cData, 40, True)                   ' margenes
    p.MarginBottom = dxf.ReadCodeFromCol(cData, 41, True)
    p.MarginRigth = dxf.ReadCodeFromCol(cData, 42, True)
    p.MarginTop = dxf.ReadCodeFromCol(cData, 43, True)

    p.PaperSizeW = dxf.ReadCodeFromCol(cData, 44, True)                     ' tamaño del papel
    p.PaperSizeH = dxf.ReadCodeFromCol(cData, 45, True)

    p.PrintOffsetX = dxf.ReadCodeFromCol(cData, 46, True)                   ' offset
    p.PrintOffsetY = dxf.ReadCodeFromCol(cData, 47, True)

    p.PrintAreaX0 = dxf.ReadCodeFromCol(cData, 48, True)
    p.PrintAreaY0 = dxf.ReadCodeFromCol(cData, 49, True)
    p.PrintAreaX1 = dxf.ReadCodeFromCol(cData, 140, True)
    p.PrintAreaY1 = dxf.ReadCodeFromCol(cData, 141, True)

    p.ScaleDrawingUnit = dxf.ReadCodeFromCol(cData, 142, True)              ' escala
    p.ScalePaper = dxf.ReadCodeFromCol(cData, 143, True)

    r = dxf.ReadCodeFromCol(cData, 70, True)                               ' flags
    r = dxf.ReadCodeFromCol(cData, 72, True)                               ' unidad, que ignoro porque uso mm
    r = dxf.ReadCodeFromCol(cData, 73, True)                               ' rotacion
    p.PrintArea = dxf.ReadCodeFromCol(cData, 74, True)                     ' area de impresion
    r = dxf.ReadCodeFromCol(cData, 7, True)                                ' Style Sheet
    r = dxf.ReadCodeFromCol(cData, 75, True)                               ' scale type , es la escala en texto
    r = dxf.ReadCodeFromCol(cData, 76, True)                               ' shade plot mode
    r = dxf.ReadCodeFromCol(cData, 77, True)                               ' shade plot resolution
    r = dxf.ReadCodeFromCol(cData, 78, True)                               ' dpi
    r = dxf.ReadCodeFromCol(cData, 147, True)                              ' realunits/paper, es la escala en un float
    r = dxf.ReadCodeFromCol(cData, 148, True)                              ' paper image x
    r = dxf.ReadCodeFromCol(cData, 149, True)                              ' paper image x

    r = dxf.ReadCodeFromCol(cData, 100, True)                            ' Inicio de PlotSettings
    If r <> "AcDbLayout" Then
        gcd.debugInfo("Bad LAYOUT data",, True, True)
        Return Null
    End If
    s.Name = dxf.ReadCodeFromCol(cData, 1, True)                           ' name

    r = dxf.ReadCodeFromCol(cData, 70, True)                               ' flags
    s.TabOrder = dxf.ReadCodeFromCol(cData, 71, True)                      ' orden de la tabulacion

    Return True

    ' catch

    Return False

End

Public Function ExportDXF(s As Sheet, cData As Collection) As Boolean

    Dim i As Integer, p As PrintStyle, r As String

    p = s.pPrintStyle

    dxf.InsertCode(0, "LAYOUT", cData)

    dxf.InsertCode(5, s.id, cData) 's.id = dxf.ReadCodeFromCol(cData, 5)                ' handle

    dxf.InsertCode(100, "AcDbPlotSettings", cData)

    dxf.InsertCode(1, p.name, cData)                             ' name
    dxf.InsertCode(2, p.PrinterName, cData)                      ' Printer name
    dxf.InsertCode(4, p.PaperName, cData)                      ' hoja

    dxf.InsertCode(40, p.MarginLeft, cData)                   ' margenes
    dxf.InsertCode(41, p.MarginBottom, cData)
    dxf.InsertCode(42, p.MarginRigth, cData)
    dxf.InsertCode(43, p.MarginTop, cData)

    dxf.InsertCode(44, p.PaperSizeW, cData)                     ' tamaño del papel
    dxf.InsertCode(45, p.PaperSizeH, cData)

    dxf.InsertCode(46, p.PrintOffsetX, cData)                   ' offset
    dxf.InsertCode(47, p.PrintOffsetY, cData)

    dxf.InsertCode(48, p.PrintAreaX0, cData)
    dxf.InsertCode(49, p.PrintAreaY0, cData)
    dxf.InsertCode(140, p.PrintAreaX1, cData)
    dxf.InsertCode(141, p.PrintAreaY1, cData)

    dxf.InsertCode(142, p.ScaleDrawingUnit, cData)              ' escala
    dxf.InsertCode(143, p.ScalePaper, cData)

    dxf.InsertCode(70, r, cData)                               ' flags
    dxf.InsertCode(72, r, cData)                               ' unidad, que ignoro porque uso mm
    dxf.InsertCode(73, r, cData)                               ' rotacion
    dxf.InsertCode(74, p.PrintArea, cData)                     ' area de impresion
    dxf.InsertCode(7, r, cData)                                ' Style Sheet
    dxf.InsertCode(75, r, cData)                               ' scale type , es la escala en texto
    dxf.InsertCode(76, r, cData)                               ' shade plot mode
    dxf.InsertCode(77, r, cData)                               ' shade plot resolution
    dxf.InsertCode(78, r, cData)                               ' dpi
    dxf.InsertCode(147, r, cData)                              ' realunits/paper, es la escala en un float
    dxf.InsertCode(148, r, cData)                              ' paper image x
    dxf.InsertCode(149, r, cData)                              ' paper image x

    dxf.InsertCode(100, "AcDbLayout", cData)
    dxf.InsertCode(1, s.Name, cData)                           ' name

    dxf.InsertCode(70, r, cData)                               ' flags
    dxf.InsertCode(71, s.TabOrder, cData)                      ' orden de la tabulacion

    Return True

    ' catch

    Return False

End
