' Gambas class file

Public picVisibleOn As New Picture
Public picVisibleOff As New Picture
Public picFrozenOn As New Picture
Public picFrozenOff As New Picture
Public picLockedOn As New Picture
Public picLockedOff As New Picture

Public Sub Form_Deactivate()

    gcd.flgShowingLayers = False
    Me.HIde

End

Public Sub Form_activate()

    Dim lay, aLayer As Layer
    Dim iRow As Integer
    Dim i As Integer
    Dim sName As String = "_menuLay"
    Dim fTotalWIdth As Integer

    If Not gcd.Drawing Then Return
    tbvLayers.Rows.Count = gcd.Drawing.Layers.Count
    tbvLayers.Rows.Height = 28
    tbvLayers.Columns.Count = 5 ' color, Visible, Freezada, Anclada, nombre

    tbvLayers.Columns[0].w = 18 ' color
    tbvLayers.Columns[1].w = 18 ' color
    tbvLayers.Columns[2].w = 18 ' color
    tbvLayers.Columns[3].w = 18 ' color
    tbvLayers.Columns[4].w = 128 ' color

    ' Computo el ancho que debe tener la grid
    For i = 0 To 4
        fTotalWIdth += tbvLayers.Columns[i].W
    Next
    tbvLayers.w = fTotalWIdth

    For i = 0 To fMain.Menus.Count - 1
        If fMain.Menus[i].Name = sName Then Break

    Next

    ' leemos de nuevo los layers
    For Each aLayer In gcd.Drawing.Layers
        tbvLayers[iRow, 0].Picture = fMain.Menus[i].Children[iRow].Picture '   [ ].[] [ ] cm.Background = aLayer.Colour
        tbvLayers[iRow, 4].Text = aLayer.Name

        ' tbvLayers[iRow, 2].Text = IIf(aLayer.Visible, "Y", "N")
        ' tbvLayers[iRow, 3].Text = IIf(aLayer.Frozen, "Y", "N")
        ' tbvLayers[iRow, 4].Text = IIf(aLayer.Locked, "Y", "N")
        '
        tbvLayers[iRow, 1].Picture = IIf(aLayer.Visible, picVisibleOn, picVisibleOff)
        tbvLayers[iRow, 2].Picture = IIf(aLayer.Frozen, picFrozenOn, picFrozenOff)
        tbvLayers[iRow, 3].Picture = IIf(aLayer.Locked, picLockedOn, picLockedOff)
        Inc iRow
    Next

    ' al final
    ' If gcd.Drawing.arrLayers.count * tbvLayers.rows[0].Height < tbvLayers.Height Then
    '
    ' Else
    '     tbvLayers.w += 14
    ' End If
    Me.w = tbvLayers.W
    Me.h = tbvLayers.h + 2
    tbvLayers.Refresh
    tbvLayers.Columns[0].EnsureVisible
    Me.move(fMain.grdLayers.ScreenX, fMain.grdLayers.ScreenY + fMain.grdLayers.h + 1)

End

Public Sub tbvLayers_MouseUp()

    Dim lay, aLayer As Layer

    Debug tbvLayers.Row, tbvLayers.Column

    Dim i, iRow As Integer
    Dim IsOn As Boolean

    aLayer = gcd.GetLayer(tbvLayers[tbvLayers.Row, 4].Text)
    iRow = tbvLayers.Row
    Select Case tbvLayers.Column
        Case 0 ' color
            ' el color del layer no puede cambiarse aqui

        Case 4 ' nombre
            gcd.Drawing.CurrLayer = aLayer
            fMain.grdLayers[0.0, 0.0].Picture = tbvLayers[iRow, 0].Picture
            fMain.grdLayers[0, 4].Text = gcd.Drawing.CurrLayer.Name
            fMain.grdLayers[0, 1].Picture = IIf(gcd.Drawing.CurrLayer.Visible, fLayersOnScreen.picVisibleOn, fLayersOnScreen.picVisibleOff)
            fMain.grdLayers[0, 2].Picture = IIf(gcd.Drawing.CurrLayer.Frozen, fLayersOnScreen.picFrozenOn, fLayersOnScreen.picFrozenOff)
            fMain.grdLayers[0, 3].Picture = IIf(gcd.Drawing.CurrLayer.Locked, fLayersOnScreen.picLockedOn, fLayersOnScreen.picLockedOff)
            'Drawing.Hide
            If gcd.Drawing.Sheet.EntitiesSelected.Count > 0 Then
                ' debo regenerar
                ' si tengo algo seleccionado, debo cambiar su color a este
                clsEntities.EditEntities("layer", gcd.Drawing.CurrLayer.Name)

                clsEntities.DeSelection()
            Endif
            Me.HIde
        Case 1  ' visibilidad
            If Mouse.Right Then ' appplies to all
                ' veo si estaba prendido
                If aLayer.Visible Then IsOn = False Else IsOn = True
                For Each aLayer In gcd.Drawing.Layers
                    aLayer.Visible = IsOn

                Next
                For i = 0 To tbvLayers.Rows.Max
                    tbvLayers[i, 1].Picture = IIf(IsOn, picVisibleOn, picVisibleOff)
                Next
            Else
                aLayer.Visible = Not aLayer.Visible
                tbvLayers[iRow, 1].Picture = IIf(aLayer.Visible, picVisibleOn, picVisibleOff)
            End If
            fMain.grdLayers[0, 1].Picture = IIf(gcd.Drawing.CurrLayer.Visible, fLayersOnScreen.picVisibleOn, fLayersOnScreen.picVisibleOff)
            fMain.ReCollect()
        Case 2
            aLayer.Frozen = Not aLayer.Frozen
            tbvLayers[iRow, 2].Picture = IIf(aLayer.Frozen, picFrozenOn, picFrozenOff)
        Case 3
            aLayer.Locked = Not aLayer.Locked
            tbvLayers[iRow, 3].Picture = IIf(aLayer.Locked, picLockedOn, picLockedOff)
    End Select

    tbvLayers.Columns[0].EnsureVisible
    'tbvLayers.Refresh
    fMain.redraw

End

Public Sub Run()

    picVisibleOn = Picture.Load(gcd.dirResources &/ "png" &/ "visible_on.png")
    picVisibleOff = Picture.Load(gcd.dirResources &/ "png" &/ "visible_off.png")
    picFrozenOn = Picture.Load(gcd.dirResources &/ "png" &/ "frozen_on.png")
    picFrozenOff = Picture.Load(gcd.dirResources &/ "png" &/ "frozen_off.png")
    picLockedOn = Picture.Load(gcd.dirResources &/ "png" &/ "locked_on.png")
    picLockedOff = Picture.Load(gcd.dirResources &/ "png" &/ "locked_off.png")
    Me.Show()

End

Public Sub Form_MouseDown()

    Debug Mouse.Button

End
