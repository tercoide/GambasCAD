' Gambas class file

Private drwTemp As Drawing
Private eSampleHatch As Entity
Private Opening As Boolean

Public Sub form_Open()

    Dim hp As HatchPattern

    Opening = True

    For Each hp In gcd.HatchPatterns
        ComboBox1.Add(hp.name)
    Next

    Opening = False

    If ComboBox1.Count = 0 Then
        Message.Error(("No hay ningun patron de relleno en la base de datos"))
        Me.Close
    Endif

End

Public Sub form_Arrange()

    Opening = False

End

Public Sub form_Show()

    ' necesito saber si estoy volviendo
    Opening = True

    If gcd.Drawing.LastScale = 0 Then gcd.Drawing.LastScale = 1
    ComboBox1.Index = gcd.Drawing.LastHatch
    txtRotation.Text = gcd.Drawing.LastAngle
    txtScale.Text = gcd.Drawing.LastScale

    Opening = False

    ComboBox1_Click

End

Public Sub ComboBox1_Click()

    If Opening Then Return
    If ComboBox1.Text = "SolId" Then
        gcd.Drawing.LastHatch = ComboBox1.Index
        gcd.Drawing.LastHatchPattern = ComboBox1.Text
        gcd.Drawing.LastHatchFile = ComboBox1.Text
        DrawingArea1.Refresh

        Return
    Endif

    Dim h As Hatch
    Dim hp As HatchPattern
    Dim i As Integer
    Dim fAng, c, s, x, y As Float
    Dim flxOffset, flxBase As New Float[]

    eSampleHatch = Null

    eSampleHatch = cadHatch.NewEntity()

    h = New Hatch

    eSampleHatch.pBlock = h

    h.Polylines.Add([0, 0, DrawingArea1.w, 0, DrawingArea1.w, DrawingArea1.h, 0, DrawingArea1.h, 0, 0])
    h.SeedPoints.Insert([0, 0])

    cadHatchBuilder.MakePattern(eSampleHatch, UCase(ComboBox1.Text), CFloat(txtRotation.text), CFloat(txtScale.Text))
    h.Levels.add(1)
    cadHatch.BuildGeometry(eSampleHatch)

    DrawingArea1.Refresh

    gcd.Drawing.lastEntity = eSampleHatch
    gcd.Drawing.LastHatch = ComboBox1.Index
    gcd.Drawing.LastHatchFile = gcd.dirResources &/ "patterns" &/ ComboBox1.Text & ".dxf"
    gcd.Drawing.LastHatchPattern = ComboBox1.Text

End

Public Sub DrawingArea1_Draw()

    Dim entIdad As Entity
    Dim fScale As Float = 1

    If Opening Then Return
    Paint.Reset()

    If Not eSampleHatch Then Return

    If ComboBox1.Text = "SolId" Then
        Paint.Brush = Paint.Color(gcd.gColor[gcd.Drawing.CurrColor])
        Paint.MoveTo(0, 0)
        Paint.Rectangle(0, 0, Paint.w, Paint.h)
        Paint.Fill

        Return

    Else

        Paint.Brush = Paint.Color(Config.WhiteAndBlack)

    Endif

    Paint.Translate(0, DrawingArea1.h)
    Paint.LineWIdth = 1 / fScale
    Paint.Scale(fScale, -fScale)

    cadHatch.Draw2(eSampleHatch)

End

Public Sub btnCAncel_Click()

    Me.Close(1) ' este codigo le dira que el user cancelo el hatch

End

Public Sub btnAdd_Click()

    ' tengo q permitir al user seleccionar una polilinea para formar el contorno del hatch
    gcd.Drawing.LastAngle = utils.CPval(txtRotation.Text)
    gcd.Drawing.LastScale = utils.CPval(txtScale.Text)

    Me.Close(2) ' el codigo 2 le dira a la clase que busque el contorno

End

Public Sub txtScale_KeyPress()

    Try gcd.Drawing.LastScale = Val(txtScale.Text)

End

Public Sub txtRotation_KeyPress()

    Try gcd.Drawing.LastAngle = Val(txtRotation.Text)

End

Public Sub btnOK_Click()

    gcd.Drawing.LastAngle = utils.CPval(txtRotation.Text)
    gcd.Drawing.LastScale = utils.CPval(txtScale.Text)

    If gcd.Drawing.LastScale = 0 Then gcd.Drawing.LastScale = 1

    Me.Close(3)

End

Public Sub btnAddPattern_Click()

    Dim s As String

    Dialog.Title = ("Select File")

    Dialog.Filter = ["*.pat", "Patterns"]

    Dialog.OpenFile(False)
    s = Dialog.Path
    gcd.ImportPAT(s)

End

Public Sub btnScaleUp_Click()

    txtScale.Text *= 2
    ComboBox1_Click

End

Public Sub btnScaleDown_Click()

    txtScale.Text /= 2
    ComboBox1_Click

End

Public Sub btnAngleUp_Click()

    txtRotation.Text += 15
    ComboBox1_Click

End

Public Sub btnAngleDown_Click()

    txtRotation.Text -= 15
    ComboBox1_Click

End


