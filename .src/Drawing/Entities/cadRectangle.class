' Gambas class file

' GambasCAD
' A simple CAD made in Gambas
'
' Copyright (C) Ing Martin P Cristia
'
' This program is free software; you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation; either version 3 of the License, or
' (at your option) any later version.
'
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
'
' You should have received a copy of the GNU General Public License
' along with this program; if not, write to the Free Software
' Foundation, Inc., 51 Franklin St, Fifth Floor,
' Boston, MA  02110-1301  USA
Create Static
Inherits CadLWPolyline
'Fast

Public Const Gender As String = "RECTANGLE"
Public Const DrawingOrder As Integer = 1        ' 1 = draws first
Public Const CmdLineHelper As String = ("a line")
Public Const ParamType As String = "PP"                             ' that is Point, Point; could be Color Text, etc
Public Const ParamHelper As String = "Start point;End point"
Public Const TotalPoints As Integer = 2

' The entity handler receives a user action, and returns the number of expected parameter
' If definitive = true, means the parameter is set
Public Function NewParameter(eBuild As Entity, vParam As Variant[], Optional Definitive As Boolean = False) As Boolean

    ' la linea solo recibe puntos
    If eBuild.fParam.Count = 0 Then eBuild.fParam.Add(0)

    If vParam[0] <> "point" Then Return False

    If gcd.StepsDone = 0 Then
        Try eBuild.P[0] = vParam[1]
        Try eBuild.P[1] = vParam[2]
        eBuild.P[2] = eBuild.P[0]
        eBuild.P[3] = eBuild.P[1]
        If definitive Then Return True
    Else If gcd.StepsDone = 1 Then

        Try eBuild.P[2] = vParam[1]
        Try eBuild.P[3] = vParam[2]
        If definitive Then Return True

    Endif

End

Public Sub Draw(oE As Entity)

    ' En esta entidad , la rutina Draw funciona solo durante la construccion
    Dim flxPoly As New Float[]

    Dim w, h As Float

    w = oE.p[2] - oE.p[0]
    h = oE.p[3] - oE.p[1]
    flxPoly.Add(oE.p[0])
    flxPoly.Add(oE.p[1])
    flxPoly.Add(oE.p[0] + w)
    flxPoly.Add(oE.p[1])
    flxPoly.Add(oE.p[0] + w)
    flxPoly.Add(oE.p[1] + h)
    flxPoly.Add(oE.p[0])
    flxPoly.Add(oE.p[1] + h)
    flxPoly.Add(oE.p[0])
    flxPoly.Add(oE.p[1])

    glx.PolyLines(flxPoly, gcd.GetGBColor(oE.Colour, oe.pLayer), gcd.GetLineWt(oE.LineWIdth, oe.pLayer), oe.LineType.TrameLength)

    ' test

End

' This function will return False if the element couldn't be created for some reason: bad or incomple user input
' True means all is good, False will instruct the clsENTITYBUILDER to delete it
Public Sub Finish(oE As Entity) As Boolean

    ' aca vamos a trasnformar la entidad en una polilinea

    oe.gender = cadLWPolyline.Gender
    Dim w, h As Float
    w = oE.p[2] - oE.p[0]
    h = oE.p[3] - oE.p[1]
    oE.p[2] = oE.p[0] + w
    oe.P[3] = oE.p[1]
    oE.P.add(oE.p[0] + w)
    oe.P.add(oE.p[1] + h)
    oE.P.add(oE.p[0])
    oe.P.add(oE.p[1] + h)
    oE.P.add(oE.p[0])
    oe.P.add(oE.p[1])

    ' cadLWPolyline.BuildPOI(oe)

    ' busco el tipo de linea, si hace falta

    ' tareas finales de armado del objeto

    oE.psel.resize(oE.p.count / 2)

End
