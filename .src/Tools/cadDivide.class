' Gambas class file

' GambasCAD
' A simple CAD made in Gambas
'
' Copyright (C) Ing Martin P Cristia
'
' This program is free software; you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation; either version 3 of the License, or
' (at your option) any later version.
'
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
'
' You should have received a copy of the GNU General Public License
' along with this program; if not, write to the Free Software
' Foundation, Inc., 51 Franklin St, Fifth Floor,
' Boston, MA  02110-1301  USA

Inherits ToolsBase
Create Static
Public Const Gender As String = "DIVIDE"

Public Offset As Float
Public EntitySelected As Entity
' Workflow
'   1 Select entity
'   2 If entity is valid to offset, select point to split it
'   3 Goto 1

Public Function Start(Optional ElemToBuild As Variant, Optional _Mode As Integer = 0) As Boolean
    ' Llamada por FCAD al inicio de la aplicacion de esta herramienta

    ' Aprovechamos para establecer los helpers (comentarios de ayuda en pantalla)
    Me.PointsDone = 0
    Me.PointsTotal = 3

    ' chequeamos si hubo seleccion previa

    If gcd.Drawing.Sheet.EntitiesSelected.Count <> 1 Then
        clsEntities.DeSelection()
        Me.Prompt = ("Select only one entity")
        gcd.clsJobCallBack = Me
        gcd.clsJob = cadSelection
        cadSelection.ReturnOnFirstSelection = True

    Else
        ' verificamos si la entidad puede ser partida
        Me.EntitySelected = gcd.Drawing.Sheet.EntitiesSelected[gcd.Drawing.Sheet.EntitiesSelected.First]

        Select Me.EntitySelected.Gender
            Case "LINE", "LWPOLYLINE", "CIRCLE", "ARC", "ELLIPSE", "SPLINE"
                clsEntities.SelectElem(Me.EntitySelected)
                DrawingAIds.Helper.texto = ("First breakpoint of entity")
                Me.PointsDone = 1
            Case Else
                Me.EntitySelected = Null
                DrawingAIds.ErrorMessage = ("Can't break that entity")
        End Select

    Endif

End

'' cadSelection o algun otro proceso nos devuelve el control
Public Sub Run()

    If gcd.Drawing.Sheet.EntitiesSelected.Count = 0 Then                                     ' we have no elements in the selection

        Me.Prompt = ("Select only one entity")
        gcd.clsJobCallBack = Me
        gcd.clsJob = cadSelection
        cadSelection.ReturnOnFirstSelection = True

    Else                                                                    ' need the first point

        ' verificamos si la entidad puede ser partida
        Me.EntitySelected = gcd.Drawing.Sheet.EntitiesSelected[gcd.Drawing.Sheet.EntitiesSelected.First]

        Select Me.EntitySelected.Gender
            Case "LINE", "LWPOLYLINE", "CIRCLE", "ARC", "ELLIPSE", "SPLINE"
                clsEntities.SelectElem(Me.EntitySelected)
                Me.Prompt = ("First breakpoint of entity")
                Me.PointsDone = 1
            Case Else
                Me.EntitySelected = Null
                DrawingAIds.ErrorMessage = ("Can't break that entity")
        End Select

    Endif

End

Public Function MouseUp()

    Dim d, dx, dy, m1, m2, angle As Float
    Dim flxIntersec As Float[]
    Dim e, e2 As Entity

    ' si llegue aca es porque ya tengo una entidad seleccionada
    e = Me.EntitySelected       ' esto lo hago para reducir el largo del codigo

    ' verifico que este sobre la entidad a romper
    If Me.PointsDone = 1 Then ' marco el primer punto
        Me.SelStartXr = gcd.Xreal(mouse.x)
        Me.SelStartYr = gcd.Yreal(mouse.y)

        If gcd.Drawing.HoveredEntity <> Me.EntitySelected Then ' el mouse se fue de la entidad a romper
            DrawingAIds.ErrorMessage = ("InvalId breakpoint")
            Return
        End If

        Select e.Gender
            Case "LINE"
                flxIntersec = clsMouseTracking.GetNearestPoint(e, Me.SelStartXr, Me.SelStartYr)
                Me.SelStartXr = flxIntersec[0]
                Me.SelStartYr = flxIntersec[1]
                Me.Prompt = ("Second breakpoint of entity")
                Me.PointsDone = 2

            Case Else
                Me.iEntitySelected = Null
                DrawingAIds.ErrorMessage = ("Can't offset that entity")
        End Select

    Else If Me.PointsDone = 2 Then ' acabo de marcar el segundo punto
        Me.SelendXr = gcd.Xreal(mouse.x)
        Me.SelEndYr = gcd.Yreal(mouse.y)
        If gcd.Drawing.HoveredEntity <> Me.EntitySelected Then ' el mouse se fue de la entidad a romper
            DrawingAIds.ErrorMessage = ("InvalId breakpoint")
            Return
        End If
        gcd.Drawing.uUndo.OpenUndoStage("Divide", Undo.TypeModify)
        gcd.Drawing.uUndo.AddUndoItem(e)
        Select e.Gender
            Case "LINE"
                flxIntersec = clsMouseTracking.GetNearestPoint(e, Me.SelendXr, Me.SelendYr)
                Me.SelendXr = flxIntersec[0]
                Me.Selendyr = flxIntersec[1]

                ' ahora tengo que partir la entidad, pero puede ocurrir que el punto sea uno de los dos endpoints
                ' If (flxIntersec[0] = e.P[0] And flxIntersec[1] = e.P[1]) Or (flxIntersec[0] = e.P[2] And flxIntersec[1] = e.P[3]) Then
                '     DrawingAids.ErrorMessage = "Invalid breakpoint"
                '     Return
                ' Endif
                ' entonces parto la entidad
                e2 = clsEntities.ClonEntity(e, True)          ' primero la clono

                ' veo cual esta mas cerca del punto inicial
                If puntos.distancia(e.P[0], e.P[1], Me.SelStartXr, Me.SelStartYr) > puntos.distancia(e.P[0], e.P[1], Me.SelendXr, Me.SelEndYr) Then

                    e2.P[2] = Me.SelendXr                   ' corrijo los puntos
                    e2.P[3] = Me.SelendYr

                    e.P[0] = Me.SelstartXr                 ' y ahora recorto la entidad original
                    e.P[1] = Me.Selstartyr
                Else
                    e2.P[0] = Me.SelendXr                   ' corrijo los puntos
                    e2.P[1] = Me.SelendYr

                    e.P[2] = Me.SelstartXr                 ' y ahora recorto la entidad original
                    e.P[3] = Me.Selstartyr

                End If

                ' tareas finales en las entidades
                Gcd.CCC[e2.gender].finish(e2)
                gcd.Drawing.uUndo.AddUndoItem(e2, Undo.TypeCreate)
                gcd.Drawing.Sheet.Entities.Add(e2, e2.Id)       ' la agrego al dibujo
                gcd.CCC[e.gender].finish(e)                ' para regenerar los POI

                ' regenro las listas openGL de ambas entidades
                clsEntities.glGenDrawList(e)
                clsEntities.glGenDrawList(e2)

                Me.Finish

            Case Else
                Me.iEntitySelected = Null
                DrawingAIds.ErrorMessage = ("Can't offset that entity")
        End Select
        gcd.Drawing.uUndo.CloseUndoStage()
    End If

End
